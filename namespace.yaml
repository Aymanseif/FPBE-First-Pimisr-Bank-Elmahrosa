apiVersion: v1
kind: Namespace
metadata:
  name: fpbe
apiVersion: v1
kind: ConfigMap
metadata:
  name: backend-api-config
  namespace: fpbe
data:
  NODE_ENV: "production"
  PUBLIC_API_URL: "https://elmahrosa.pi/api"
apiVersion: v1
kind: Secret
metadata:
  name: fpbe-secrets
  namespace: fpbe
type: Opaque
stringData:
  POSTGRES_PASSWORD: "strong-db-password"
  JWT_SECRET: "your-jwt-secret"
  ETH_RPC_URL: "https://mainnet.infura.io/v3/your-infura-key"
  ETH_PRIVATE_KEY: "your-ethereum-private-key"
  BTC_API_KEY: "your-bitcoin-api-key"
  apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fpbe-ingress
  namespace: fpbe
  annotations:
    kubernetes.io/ingress.class: "nginx"
spec:
  rules:
  - host: elmahrosa.pi
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: frontend-dev
            port:
              number: 80
      - path: /api
        pathType: Prefix
        backend:
          service:
            name: backend-api
            port:
              number: 80
              apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: postgres-pv-claim
  namespace: fpbe
  labels:
    app: db
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
      apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend-api
  namespace: fpbe
spec:
  replicas: 2
  selector:
    matchLabels:
      app: backend-api
  template:
    metadata:
      labels:
        app: backend-api
    spec:
      containers:
      - name: backend-api
        image: yourrepo/fpbe-backend-api:latest
        ports:
        - containerPort: 3000
        envFrom:
        - configMapRef:
            name: backend-api-config
        env:
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: fpbe-secrets
              key: JWT_SECRET
        resources:
          limits:
            memory: 512Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 10
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 3000
          initialDelaySeconds: 5
          periodSeconds: 5
