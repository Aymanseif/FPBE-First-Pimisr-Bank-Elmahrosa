const express = require("express");
const { ethers } = require("ethers");
const cors = require("cors");
const dotenv = require("dotenv");

dotenv.config();
const app = express();
app.use(express.json());
app.use(cors());

// Konfigurasi Blockchain
const provider = new ethers.providers.JsonRpcProvider(process.env.RPC_URL);
const wallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
const contractABI = require("./QuantumSecureABI.json");
const contract = new ethers.Contract(process.env.CONTRACT_ADDRESS, contractABI, wallet);

// Register Quantum-Secure Public Key
app.post("/registerPublicKey", async (req, res) => {
  const { publicKey } = req.body;
  try {
    const tx = await contract.registerPublicKey(publicKey);
    await tx.wait();
    res.json({ success: true, txHash: tx.hash });
  } catch (error) {
    res.status(500).json({ error: error.message });
  }
});

// Get Registered Public Key
app.get("/getPublicKey/:user", async (req, res) => {
  try {
    const publicKey = await contract.getPublicKey(req.params.user);
    res.json({ publicKey });
  } catch (error) {
    res.status(404).json({ error: "Public key not found" });
  }
});

// Jalankan server
app.listen(3001, () => console.log("âœ… Quantum Encryption API running on port 3001"));
