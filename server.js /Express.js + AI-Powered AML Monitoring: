const express = require("express");
const jwt = require("jsonwebtoken");
const { MongoClient } = require("mongodb");
const { Kafka } = require("kafkajs");
const joblib = require("joblib");
const fs = require("fs");
const crypto = require("crypto");
const bcrypt = require("bcrypt");

const app = express();
app.use(express.json());

const SECRET_KEY = "supersecurekey";
const MONGO_URI = "mongodb://localhost:27017";
const kafka = new Kafka({ clientId: "aml-service", brokers: ["localhost:9092"] });

// MongoDB
const client = new MongoClient(MONGO_URI);
client.connect();
const db = client.db("aml_monitoring");

// Load AI Model
const model = joblib.load(fs.readFileSync("models/aml_model.pkl"));

// Hash Password
async function hashPassword(password) {
  const salt = await bcrypt.genSalt(10);
  return await bcrypt.hash(password, salt);
}

// Login API (MFA & JWT)
app.post("/login", async (req, res) => {
  const { username, password } = req.body;
  const user = await db.collection("users").findOne({ username });

  if (!user || !(await bcrypt.compare(password, user.password))) {
    return res.status(401).json({ message: "Unauthorized" });
  }

  const token = jwt.sign({ username }, SECRET_KEY, { expiresIn: "1h" });
  res.json({ token });
});

// AI-Powered AML Detection
app.post("/detect", async (req, res) => {
  const transaction = req.body;
  const score = model.predict([Object.values(transaction)])[0];

  if (score === -1) {
    await db.collection("flagged").insertOne(transaction);
    res.json({ status: "suspicious", message: "Transaction flagged for review." });
  } else {
    res.json({ status: "normal", message: "Transaction is clean." });
  }
});

// Kafka AML Alerts
const producer = kafka.producer();
producer.connect();
app.post("/alert", async (req, res) => {
  const alert = req.body;
  await producer.send({ topic: "aml_alerts", messages: [{ value: JSON.stringify(alert) }] });
  res.json({ message: "Alert sent!" });
});

// Start Server
app.listen(3000, () => console.log("âœ… AML Backend Running on port 3000"));
