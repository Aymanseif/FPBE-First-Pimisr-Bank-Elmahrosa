apiVersion: apps/v1
kind: Deployment
metadata:
  name: pi-service
  namespace: fpbe
  labels:
    app: fpbe
    component: pi-service
    part-of: fpbe-banking
    version: v1
    security-tier: critical
  annotations:
    description: "Pi Network integration service for cryptocurrency operations"
spec:
  replicas: 5
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: fpbe
      component: pi-service
  template:
    metadata:
      labels:
        app: fpbe
        component: pi-service
        version: v1
        security-tier: critical
      annotations:
        sidecar.istio.io/inject: "true"
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        prometheus.io/path: "/metrics"
        seccomp.security.alpha.kubernetes.io/pod: "runtime/default"
        container.apparmor.security.beta.kubernetes.io/pi-service: "runtime/default"
        checksum/config: ${checksum/configmap}
    spec:
      serviceAccountName: pi-service-sa
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        runAsNonRoot: true
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
        seccompProfile:
          type: RuntimeDefault
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              component: pi-service
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: pi-service
                topologyKey: kubernetes.io/hostname
            - weight: 90
              podAffinityTerm:
                labelSelector:
                  matchLabels:
                    component: pi-service
                topologyKey: topology.kubernetes.io/zone
      containers:
        - name: pi-service
          image: fpbe/pi-service:latest
          imagePullPolicy: Always
          ports:
            - name: http
              containerPort: 3000
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP
          env:
            - name: NODE_ENV
              value: "production"
            - name: PORT
              value: "3000"
            - name: LOG_LEVEL
              value: "info"
            - name: METRICS_PORT
              value: "9090"
            - name: MAX_CONNECTIONS
              value: "100"
          envFrom:
            - configMapRef:
                name: pi-service-config
            - secretRef:
                name: pi-service-secrets
          resources:
            requests:
              cpu: "200m"
              memory: "256Mi"
            limits:
              cpu: "500m"
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /health
              port: 3000
              httpHeaders:
                - name: Custom-Health-Check
                  value: "true"
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 3000
              httpHeaders:
                - name: Custom-Health-Check
                  value: "true"
            initialDelaySeconds: 20
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /health
              port: 3000
            initialDelaySeconds: 15
            periodSeconds: 5
            failureThreshold: 30
          volumeMounts:
            - name: pi-service-config
              mountPath: /usr/src/app/config
              readOnly: true
            - name: pi-service-secrets
              mountPath: /usr/src/app/secrets
              readOnly: true
            - name: tmp
              mountPath: /tmp
          securityContext:
            capabilities:
              drop:
                - ALL
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      volumes:
        - name: pi-service-config
          configMap:
            name: pi-service-config
        - name: pi-service-secrets
          secret:
            secretName: pi-service-secrets
        - name: tmp
          emptyDir: {}
      terminationGracePeriodSeconds: 60
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: pi-service-pdb
  namespace: fpbe
spec:
  minAvailable: "80%"
  selector:
    matchLabels:
      app: fpbe
      component: pi-service
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: pi-service-hpa
  namespace: fpbe
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: pi-service
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 60