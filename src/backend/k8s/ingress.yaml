apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: fpbe-ingress
  namespace: fpbe
  labels:
    app: fpbe
    component: ingress
    part-of: fpbe
    version: v1
    managed-by: kubectl
  annotations:
    # Kong Ingress Controller annotations
    kubernetes.io/ingress.class: "kong"
    konghq.com/strip-path: "true"
    konghq.com/protocols: "https"
    konghq.com/https-redirect-status-code: "301"
    konghq.com/preserve-host: "true"
    konghq.com/rewrite-target: "/$2"
    konghq.com/load-balance-algorithm: "round-robin"
    konghq.com/upstream-keepalive-requests: "100"
    konghq.com/upstream-keepalive-timeout: "60"

    # TLS and Security annotations
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-methods: "GET, POST, PUT, DELETE, OPTIONS"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "https://*.fpbe.com,capacitor://localhost,ionic://localhost"
    nginx.ingress.kubernetes.io/cors-allow-headers: "Authorization,Content-Type,Accept,Origin,X-Requested-With,X-CSRF-Token"
    nginx.ingress.kubernetes.io/cors-expose-headers: "Content-Length,Content-Type,X-Request-ID,X-RateLimit-Limit,X-RateLimit-Remaining"
    nginx.ingress.kubernetes.io/cors-max-age: "3600"

    # Security Headers
    nginx.ingress.kubernetes.io/configuration-snippet: |
      more_set_headers "Strict-Transport-Security: max-age=31536000; includeSubDomains; preload";
      more_set_headers "X-Frame-Options: DENY";
      more_set_headers "X-Content-Type-Options: nosniff";
      more_set_headers "X-XSS-Protection: 1; mode=block";
      more_set_headers "Referrer-Policy: strict-origin-when-cross-origin";
      more_set_headers "Content-Security-Policy: default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';";

    # Monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "10254"
    prometheus.io/scheme: "http"
    prometheus.io/path: "/metrics"

spec:
  tls:
    - hosts:
        - api.fpbe.com
        - "*.fpbe.com"
      secretName: fpbe-tls-cert
  rules:
    - host: api.fpbe.com
      http:
        paths:
          # Auth Service Routes
          - path: /api/v1/auth(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: auth-service
                port:
                  number: 8080

          # Account Service Routes
          - path: /api/v1/accounts(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: account-service
                port:
                  number: 8080

          # Transaction Service Routes
          - path: /api/v1/transactions(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: transaction-service
                port:
                  number: 8080

          # Pi Network Service Routes
          - path: /api/v1/pi(/|$)(.*)
            pathType: Prefix
            backend:
              service:
                name: pi-service
                port:
                  number: 8080

---
# Network Policy for Ingress Traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: fpbe-ingress-network-policy
  namespace: fpbe
spec:
  podSelector:
    matchLabels:
      app: fpbe
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: fpbe
        - podSelector:
            matchLabels:
              app: fpbe
      ports:
        - protocol: TCP
          port: 443
        - protocol: TCP
          port: 80
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: fpbe
      ports:
        - protocol: TCP
          port: 8080