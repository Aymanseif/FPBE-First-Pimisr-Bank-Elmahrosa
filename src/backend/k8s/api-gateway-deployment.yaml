apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: fpbe
  labels:
    app: fpbe
    component: api-gateway
    part-of: fpbe
    version: v1
    tier: gateway
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: fpbe
      component: api-gateway
  template:
    metadata:
      labels:
        app: fpbe
        component: api-gateway
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8001"
        sidecar.istio.io/inject: "true"
        checksum/config: ${checksum/configmap}
        security.fpbe.io/tls-version: "TLS1.3"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
        readOnlyRootFilesystem: true
        allowPrivilegeEscalation: false
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: topology.kubernetes.io/zone
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app: fpbe
              component: api-gateway
      containers:
        - name: api-gateway
          image: kong:3.2
          ports:
            - name: proxy
              containerPort: 8000
              protocol: TCP
            - name: admin
              containerPort: 8001
              protocol: TCP
            - name: metrics
              containerPort: 8100
              protocol: TCP
          resources:
            requests:
              cpu: "500m"
              memory: "512Mi"
            limits:
              cpu: "1000m"
              memory: "1Gi"
          env:
            - name: KONG_DATABASE
              value: "off"
            - name: KONG_PROXY_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_ADMIN_ACCESS_LOG
              value: /dev/stdout
            - name: KONG_PROXY_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_ERROR_LOG
              value: /dev/stderr
            - name: KONG_ADMIN_LISTEN
              value: "0.0.0.0:8001"
            - name: KONG_PROXY_LISTEN
              value: "0.0.0.0:8000 ssl http2"
            - name: KONG_SSL_CERT
              value: "/etc/ssl/certs/tls.crt"
            - name: KONG_SSL_CERT_KEY
              value: "/etc/ssl/certs/tls.key"
            - name: KONG_NGINX_WORKER_PROCESSES
              value: "auto"
            - name: KONG_PLUGINS
              value: "bundled,rate-limiting,cors,jwt,oauth2"
            - name: KONG_NGINX_PROXY_PROXY_BUFFER_SIZE
              value: "160k"
            - name: KONG_NGINX_PROXY_PROXY_BUFFERS
              value: "64 160k"
          livenessProbe:
            httpGet:
              path: /health
              port: 8000
              scheme: HTTPS
            initialDelaySeconds: 15
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          readinessProbe:
            httpGet:
              path: /health
              port: 8000
              scheme: HTTPS
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1
          startupProbe:
            httpGet:
              path: /health
              port: 8000
              scheme: HTTPS
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 5
            failureThreshold: 30
          volumeMounts:
            - name: kong-config
              mountPath: /etc/kong
              readOnly: true
            - name: ssl-certs
              mountPath: /etc/ssl/certs
              readOnly: true
            - name: tmp
              mountPath: /tmp
      volumes:
        - name: kong-config
          configMap:
            name: api-gateway-config
        - name: ssl-certs
          secret:
            secretName: api-gateway-certs
        - name: tmp
          emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: fpbe
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-cross-zone-load-balancing-enabled: "true"
    service.beta.kubernetes.io/aws-load-balancer-ssl-cert: ${ACM_CERT_ARN}
    service.beta.kubernetes.io/aws-load-balancer-ssl-ports: "443"
spec:
  type: LoadBalancer
  ports:
    - name: proxy-ssl
      port: 443
      targetPort: 8000
      protocol: TCP
    - name: admin
      port: 8001
      targetPort: 8001
      protocol: TCP
    - name: metrics
      port: 8100
      targetPort: 8100
      protocol: TCP
  selector:
    app: fpbe
    component: api-gateway
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-network-policy
  namespace: fpbe
spec:
  podSelector:
    matchLabels:
      app: fpbe
      component: api-gateway
  policyTypes:
    - Ingress
    - Egress
  ingress:
    - from:
        - namespaceSelector:
            matchLabels:
              name: fpbe
        - podSelector:
            matchLabels:
              app: fpbe
      ports:
        - protocol: TCP
          port: 8000
        - protocol: TCP
          port: 8001
        - protocol: TCP
          port: 8100
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: fpbe
      ports:
        - protocol: TCP
          port: 443
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: api-gateway-hpa
  namespace: fpbe
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: api-gateway
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 80
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: 80
  behavior:
    scaleUp:
      policies:
        - type: Pods
          value: 4
          periodSeconds: 60
      selectPolicy: Max
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: api-gateway-pdb
  namespace: fpbe
spec:
  minAvailable: "90%"
  selector:
    matchLabels:
      app: fpbe
      component: api-gateway