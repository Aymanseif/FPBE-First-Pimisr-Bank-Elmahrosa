# /etc/nginx/nginx.conf

worker_processes auto;  # Automatically set the number of worker processes based on available CPU cores
events {
    worker_connections 1024;  # Maximum number of simultaneous connections per worker
}

http {
    upstream backend {
        # Define the backend servers (replace with actual service instances)
        server backend-service-1:3000;  # First instance
        server backend-service-2:3000;  # Second instance
        server backend-service-3:3000;  # Third instance
    }

    server {
        listen 80;  # Listen on port 80 for HTTP traffic

        location / {
            proxy_pass http://backend;  # Forward requests to the backend upstream
            proxy_set_header Host $host;  # Preserve the original Host header
            proxy_set_header X-Real-IP $remote_addr;  # Forward the real client IP
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;  # Forward the X-Forwarded-For header
            proxy_set_header X-Forwarded-Proto $scheme;  # Forward the original protocol (HTTP/HTTPS)
        }

        # Health check endpoint
        location /health {
            proxy_pass http://backend;  # Forward health check requests to the backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Metrics endpoint for Prometheus
        location /metrics {
            proxy_pass http://backend;  # Forward metrics requests to the backend
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        # Error handling
        error_page 500 502 503 504 /50x.html;  # Custom error page for server errors
        location = /50x.html {
            root /usr/share/nginx/html;  # Path to the custom error page
        }
    }

    # Optional: Enable HTTPS (requires SSL certificates)
    # server {
    #     listen 443 ssl;
    #     server_name yourdomain.com;  # Replace with your domain

    #     ssl_certificate /path/to/your/certificate.crt;  # Path to your SSL certificate
    #     ssl_certificate_key /path/to/your/private.key;  # Path to your SSL private key

    #     location / {
    #         proxy_pass http://backend;
    #         proxy_set_header Host $host;
    #         proxy_set_header X-Real-IP $remote_addr;
    #         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #         proxy_set_header X-Forwarded-Proto $scheme;
    #     }
    # }
}
