openapi: 3.0.0
info:
  title: FPBE Transaction Service API
  version: 1.0.0
  description: |
    API for managing banking transactions including fiat and Pi cryptocurrency operations.
    Provides high-performance transaction processing with comprehensive security features
    and Pi Network integration.

servers:
  - url: /api/v1/transactions
    description: Transaction service base path

security:
  - bearerAuth: []
  - apiKey: []

paths:
  /create:
    post:
      summary: Create a new transaction
      description: |
        Creates a new financial transaction with support for both fiat and Pi cryptocurrency.
        Includes fraud detection and comprehensive validation.
      operationId: createTransaction
      security:
        - bearerAuth: []
        - apiKey: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTransactionRequest'
      responses:
        '201':
          description: Transaction created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '409':
          $ref: '#/components/responses/Conflict'
        '422':
          $ref: '#/components/responses/ValidationError'
        '500':
          $ref: '#/components/responses/InternalError'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
            example: 1000
        X-RateLimit-Remaining:
          schema:
            type: integer
        X-RateLimit-Reset:
          schema:
            type: integer
            format: unix-timestamp

  /{transactionId}:
    get:
      summary: Get transaction by ID
      description: Retrieves detailed transaction information including status and audit trail
      operationId: getTransaction
      security:
        - bearerAuth: []
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: include_events
          in: query
          required: false
          schema:
            type: boolean
            default: false
      responses:
        '200':
          description: Transaction details retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
      headers:
        Cache-Control:
          schema:
            type: string
            example: private, max-age=300

  /account/{accountId}:
    get:
      summary: Get account transactions
      description: Retrieves paginated transaction history for an account with filtering options
      operationId: getAccountTransactions
      security:
        - bearerAuth: []
      parameters:
        - name: accountId
          in: path
          required: true
          schema:
            type: string
            format: uuid
        - name: cursor
          in: query
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: start_date
          in: query
          schema:
            type: string
            format: date-time
        - name: end_date
          in: query
          schema:
            type: string
            format: date-time
        - name: transaction_type
          in: query
          schema:
            type: string
            enum: [FIAT_TRANSFER, PI_TRANSFER, CURRENCY_EXCHANGE, PAYMENT, REFUND]
        - name: currency
          in: query
          schema:
            type: string
            pattern: ^[A-Z]{3,4}$
      responses:
        '200':
          description: Account transactions retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GetAccountTransactionsResponse'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/InternalError'
      headers:
        X-RateLimit-Limit:
          schema:
            type: integer
            example: 1000
        X-RateLimit-Remaining:
          schema:
            type: integer
        X-RateLimit-Reset:
          schema:
            type: integer
            format: unix-timestamp
        X-Next-Cursor:
          schema:
            type: string

components:
  schemas:
    Transaction:
      type: object
      required:
        - id
        - from_account_id
        - to_account_id
        - amount
        - currency
        - type
        - status
        - created_at
      properties:
        id:
          type: string
          format: uuid
          description: Unique transaction identifier
        from_account_id:
          type: string
          format: uuid
          description: Source account identifier
        to_account_id:
          type: string
          format: uuid
          description: Destination account identifier
        amount:
          type: number
          format: double
          description: Transaction amount
        currency:
          type: string
          pattern: ^[A-Z]{3,4}$
          description: ISO 4217 currency code or PI
        type:
          type: string
          enum: [FIAT_TRANSFER, PI_TRANSFER, CURRENCY_EXCHANGE, PAYMENT, REFUND]
          description: Type of transaction
        status:
          type: string
          enum: [PENDING, PROCESSING, COMPLETED, FAILED, REVERSED]
          description: Current transaction status
        pi_network_reference:
          type: string
          description: Pi Network blockchain reference for cryptocurrency transactions
        conversion_rate:
          type: number
          format: double
          description: Exchange rate for currency conversions
        metadata:
          type: object
          additionalProperties: true
          description: Additional transaction metadata
        fraud_check_status:
          type: string
          enum: [PASSED, FLAGGED, REJECTED]
          description: Fraud detection check result
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time

    CreateTransactionRequest:
      type: object
      required:
        - from_account_id
        - to_account_id
        - amount
        - currency
        - type
      properties:
        from_account_id:
          type: string
          format: uuid
        to_account_id:
          type: string
          format: uuid
        amount:
          type: number
          format: double
          minimum: 0.01
        currency:
          type: string
          pattern: ^[A-Z]{3,4}$
        type:
          type: string
          enum: [FIAT_TRANSFER, PI_TRANSFER, CURRENCY_EXCHANGE, PAYMENT, REFUND]
        metadata:
          type: object
          additionalProperties: true
        idempotency_key:
          type: string
          format: uuid

    GetAccountTransactionsResponse:
      type: object
      required:
        - transactions
        - total_count
      properties:
        transactions:
          type: array
          items:
            $ref: '#/components/schemas/Transaction'
        next_cursor:
          type: string
        total_count:
          type: integer
        total_amount:
          type: number
          format: double
        amount_by_currency:
          type: object
          additionalProperties:
            type: number
            format: double

  responses:
    BadRequest:
      description: Invalid request parameters
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication required or failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Insufficient permissions or rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Requested resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Conflict:
      description: Resource conflict or duplicate transaction
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    ValidationError:
      description: Business validation failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ValidationError'
    InternalError:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

  schemas:
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
        details:
          type: object
          additionalProperties: true

    ValidationError:
      type: object
      required:
        - code
        - message
        - errors
      properties:
        code:
          type: string
        message:
          type: string
        errors:
          type: array
          items:
            type: object
            properties:
              field:
                type: string
              message:
                type: string

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for authentication
    apiKey:
      type: apiKey
      in: header
      name: X-API-Key
      description: API key for service authentication