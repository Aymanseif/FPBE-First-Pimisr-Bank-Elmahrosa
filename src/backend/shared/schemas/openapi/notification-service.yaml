openapi: 3.0.0
info:
  title: FPBE Notification Service API
  version: 1.0.0
  description: |
    API specification for the FPBE mobile banking notification service.
    Supports multi-channel notifications including push, SMS and email with comprehensive delivery tracking.

servers:
  - url: /api/v1
    description: Version 1 API endpoint

components:
  schemas:
    NotificationRequest:
      type: object
      required:
        - user_id
        - type
        - title
        - body
      properties:
        user_id:
          type: string
          description: Unique identifier of the target user
          example: "user-123"
        type:
          type: string
          enum: [transaction_alert, security_alert, mining_update, marketing, system_update]
          description: Type of notification
        title:
          type: string
          description: Notification title
          maxLength: 100
        body:
          type: string
          description: Notification content
          maxLength: 1000
        data:
          type: object
          description: Additional notification payload data
        priority:
          type: string
          enum: [high, normal, low]
          default: normal
        scheduled_for:
          type: string
          format: date-time
          description: Optional scheduled delivery time
        channel_config:
          type: object
          properties:
            push:
              type: boolean
              default: true
            email:
              type: boolean
              default: false
            sms:
              type: boolean
              default: false
        tags:
          type: array
          items:
            type: string
          description: Optional tags for notification categorization

    NotificationResponse:
      type: object
      properties:
        notification_id:
          type: string
          format: uuid
        status:
          type: string
          enum: [pending, sent, delivered, read, failed]
        created_at:
          type: string
          format: date-time
        delivered_at:
          type: string
          format: date-time
        delivery_attempts:
          type: array
          items:
            type: object
            properties:
              timestamp:
                type: string
                format: date-time
              status:
                type: string
              channel:
                type: string
              error:
                type: string
        channel_response:
          type: object
          properties:
            push:
              type: object
              properties:
                provider:
                  type: string
                message_id:
                  type: string
                status:
                  type: string
            email:
              type: object
              properties:
                provider:
                  type: string
                message_id:
                  type: string
                status:
                  type: string
            sms:
              type: object
              properties:
                provider:
                  type: string
                message_id:
                  type: string
                status:
                  type: string

    ErrorResponse:
      type: object
      properties:
        error_code:
          type: string
          description: Machine-readable error code
        message:
          type: string
          description: Human-readable error message
        details:
          type: array
          items:
            type: string
          description: Additional error details
        correlation_id:
          type: string
          description: Request correlation ID for tracking
        debug_info:
          type: object
          description: Debug information (development only)

    WebhookRegistration:
      type: object
      required:
        - url
        - event_types
      properties:
        url:
          type: string
          format: uri
          description: Webhook callback URL
        event_types:
          type: array
          items:
            type: string
            enum: [notification.sent, notification.delivered, notification.failed]
        headers:
          type: object
          description: Custom headers to include in webhook calls
        secret:
          type: string
          description: Webhook signing secret

  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /auth/token
          scopes:
            notifications:send: Send notifications
            notifications:read: Read notification status
            notifications:admin: Administrative access
            webhooks:manage: Manage webhook registrations

paths:
  /notifications/send:
    post:
      summary: Send a notification
      description: Send a notification through specified channels with delivery tracking
      operationId: sendNotification
      security:
        - OAuth2: [notifications:send]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationRequest'
      responses:
        '200':
          description: Notification queued successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '429':
          description: Rate limit exceeded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '503':
          description: Service unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

  /notifications/bulk:
    post:
      summary: Send bulk notifications
      description: Send multiple notifications in a single request
      operationId: bulkSendNotifications
      security:
        - OAuth2: [notifications:send]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - notifications
              properties:
                notifications:
                  type: array
                  items:
                    $ref: '#/components/schemas/NotificationRequest'
                  maxItems: 100
      responses:
        '200':
          description: Bulk notifications queued
          content:
            application/json:
              schema:
                type: object
                properties:
                  results:
                    type: array
                    items:
                      $ref: '#/components/schemas/NotificationResponse'
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '429':
          $ref: '#/components/responses/Error429'
        '500':
          $ref: '#/components/responses/Error500'

  /notifications/{notification_id}:
    get:
      summary: Get notification status
      description: Retrieve detailed notification delivery status and tracking information
      operationId: getNotificationStatus
      security:
        - OAuth2: [notifications:read]
      parameters:
        - name: notification_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Notification details retrieved
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationResponse'
        '404':
          description: Notification not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
        '500':
          $ref: '#/components/responses/Error500'

  /webhooks:
    post:
      summary: Register webhook
      description: Register a webhook for notification events
      operationId: registerWebhook
      security:
        - OAuth2: [webhooks:manage]
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookRegistration'
      responses:
        '201':
          description: Webhook registered successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  webhook_id:
                    type: string
                    format: uuid
                  status:
                    type: string
                    enum: [active]
        '400':
          $ref: '#/components/responses/Error400'
        '401':
          $ref: '#/components/responses/Error401'
        '500':
          $ref: '#/components/responses/Error500'

  /health:
    get:
      summary: Service health check
      description: Check notification service health status
      operationId: healthCheck
      responses:
        '200':
          description: Service is healthy
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [healthy]
                  version:
                    type: string
                  uptime:
                    type: number
                  dependencies:
                    type: object
                    properties:
                      fcm:
                        type: string
                        enum: [healthy, degraded, unhealthy]
                      apns:
                        type: string
                        enum: [healthy, degraded, unhealthy]
                      email:
                        type: string
                        enum: [healthy, degraded, unhealthy]
                      sms:
                        type: string
                        enum: [healthy, degraded, unhealthy]
        '503':
          description: Service unhealthy
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'

components:
  responses:
    Error400:
      description: Bad request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Error401:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Error429:
      description: Rate limit exceeded
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Error500:
      description: Internal server error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'