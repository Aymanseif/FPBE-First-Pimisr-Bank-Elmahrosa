{{/* Enhanced DestinationRule template for FPBE microservices */}}
{{- define "istio.destinationRule" -}}
{{- $serviceName := .serviceName -}}
{{- $trafficPolicy := .trafficPolicy -}}
{{- $securityPolicy := .securityPolicy -}}

apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: {{ $serviceName }}-destination-rule
  namespace: {{ .Values.global.configNamespace }}
  labels:
    app.kubernetes.io/name: {{ $serviceName }}
    app.kubernetes.io/part-of: fpbe
    istio-injection: enabled
spec:
  host: {{ $serviceName }}.{{ .Values.global.configNamespace }}.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
      consistentHash:
        httpHeaderName: x-user-id
        minimumRingSize: 1024
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30ms
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 1024
        maxRequestsPerConnection: 10
        maxRetries: 3
        idleTimeout: 15s
        h2MaxRequests: 1000
    outlierDetection:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 30s
      maxEjectionPercent: 10
      minHealthPercent: 50
    tls:
      mode: STRICT
      clientCertificate: /etc/certs/cert-chain.pem
      privateKey: /etc/certs/key.pem
      caCertificates: /etc/certs/root-cert.pem
{{- end -}}

---
# Auth Service DestinationRule
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: auth-service-destination-rule
  namespace: {{ .Values.global.configNamespace }}
  labels:
    app.kubernetes.io/name: auth-service
    app.kubernetes.io/part-of: fpbe
    istio-injection: enabled
spec:
  host: auth-service.{{ .Values.global.configNamespace }}.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
      consistentHash:
        httpHeaderName: x-user-id
        minimumRingSize: 1024
    connectionPool:
      tcp:
        maxConnections: 100
        connectTimeout: 30ms
        tcpKeepalive:
          time: 7200s
          interval: 75s
      http:
        http1MaxPendingRequests: 1024
        maxRequestsPerConnection: 10
        maxRetries: 5
        idleTimeout: 10s
        h2MaxRequests: 1000
    outlierDetection:
      consecutiveErrors: 3
      interval: 20s
      baseEjectionTime: 30s
      maxEjectionPercent: 15
      minHealthPercent: 60
    tls:
      mode: STRICT
      clientCertificate: /etc/certs/cert-chain.pem
      privateKey: /etc/certs/key.pem
      caCertificates: /etc/certs/root-cert.pem

---
# Transaction Service DestinationRule
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: transaction-service-destination-rule
  namespace: {{ .Values.global.configNamespace }}
  labels:
    app.kubernetes.io/name: transaction-service
    app.kubernetes.io/part-of: fpbe
    istio-injection: enabled
spec:
  host: transaction-service.{{ .Values.global.configNamespace }}.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
      consistentHash:
        httpHeaderName: x-transaction-id
        minimumRingSize: 2048
    connectionPool:
      tcp:
        maxConnections: 200
        connectTimeout: 20ms
        tcpKeepalive:
          time: 7200s
          interval: 60s
      http:
        http1MaxPendingRequests: 2048
        maxRequestsPerConnection: 20
        maxRetries: 3
        idleTimeout: 15s
        h2MaxRequests: 2000
    outlierDetection:
      consecutiveErrors: 5
      interval: 30s
      baseEjectionTime: 60s
      maxEjectionPercent: 20
      minHealthPercent: 70
    tls:
      mode: STRICT
      clientCertificate: /etc/certs/cert-chain.pem
      privateKey: /etc/certs/key.pem
      caCertificates: /etc/certs/root-cert.pem

---
# Pi Service DestinationRule
apiVersion: networking.istio.io/v1beta1
kind: DestinationRule
metadata:
  name: pi-service-destination-rule
  namespace: {{ .Values.global.configNamespace }}
  labels:
    app.kubernetes.io/name: pi-service
    app.kubernetes.io/part-of: fpbe
    istio-injection: enabled
spec:
  host: pi-service.{{ .Values.global.configNamespace }}.svc.cluster.local
  trafficPolicy:
    loadBalancer:
      simple: ROUND_ROBIN
      consistentHash:
        httpHeaderName: x-wallet-id
        minimumRingSize: 1024
    connectionPool:
      tcp:
        maxConnections: 150
        connectTimeout: 50ms
        tcpKeepalive:
          time: 7200s
          interval: 90s
      http:
        http1MaxPendingRequests: 1024
        maxRequestsPerConnection: 15
        maxRetries: 5
        idleTimeout: 30s
        h2MaxRequests: 1500
    outlierDetection:
      consecutiveErrors: 5
      interval: 45s
      baseEjectionTime: 90s
      maxEjectionPercent: 15
      minHealthPercent: 65
    tls:
      mode: STRICT
      clientCertificate: /etc/certs/cert-chain.pem
      privateKey: /etc/certs/key.pem
      caCertificates: /etc/certs/root-cert.pem