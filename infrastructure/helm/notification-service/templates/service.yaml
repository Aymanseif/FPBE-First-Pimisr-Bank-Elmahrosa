apiVersion: v1
kind: Service
metadata:
  name: {{ include "notification-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "notification-service.labels" . | nindent 4 }}
    app.kubernetes.io/component: notification
    app.kubernetes.io/part-of: fpbe
  annotations:
    # Prometheus monitoring annotations
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.metrics.port }}"
    prometheus.io/path: "/metrics"
    
    # Service mesh integration annotations
    service.istio.io/canonical-name: {{ include "notification-service.fullname" . }}
    service.istio.io/canonical-revision: {{ .Values.revision | default "v1" }}
    
    # Security annotations
    security.fpbe.io/tls-enabled: "true"
    security.fpbe.io/mtls-mode: "STRICT"
    
    # Health check annotations
    health.fpbe.io/readiness-path: "/health/ready"
    health.fpbe.io/liveness-path: "/health/live"
    
    # Configuration checksum for updates
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}

spec:
  type: {{ .Values.service.type }}
  # Port configuration for notification service
  ports:
    # Main HTTP port for notification API
    - port: {{ .Values.service.port }}
      targetPort: 8084
      protocol: TCP
      name: http-notification
      
    # Metrics port for Prometheus scraping
    - port: {{ .Values.metrics.port }}
      targetPort: {{ .Values.metrics.port }}
      protocol: TCP
      name: http-metrics
      
    # WebSocket port for real-time notifications
    - port: {{ .Values.websocket.port }}
      targetPort: {{ .Values.websocket.port }}
      protocol: TCP
      name: ws-notification
      
    # Health check port
    - port: {{ .Values.health.port }}
      targetPort: {{ .Values.health.port }}
      protocol: TCP
      name: http-health

  # Pod selector using template labels
  selector:
    {{- include "notification-service.selectorLabels" . | nindent 4 }}
    
  # Session affinity for WebSocket connections
  sessionAffinity: ClientIP
  sessionAffinityConfig:
    clientIP:
      timeoutSeconds: 10800  # 3 hours
      
  # Publishing not ready addresses
  publishNotReadyAddresses: false
  
  # External traffic policy for security
  externalTrafficPolicy: Local
  
  # IP family policy
  ipFamilyPolicy: SingleStack
  ipFamilies:
    - IPv4