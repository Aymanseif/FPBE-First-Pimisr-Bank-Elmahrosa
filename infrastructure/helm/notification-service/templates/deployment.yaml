apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "notification-service.fullname" . }}
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "notification-service.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8084"
    prometheus.io/path: "/metrics"
    checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
    checksum/secrets: {{ include (print $.Template.BasePath "/secrets.yaml") . | sha256sum }}

spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      {{- include "notification-service.selectorLabels" . | nindent 6 }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0

  template:
    metadata:
      annotations:
        {{- with .Values.podAnnotations }}
        {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "notification-service.selectorLabels" . | nindent 8 }}
    spec:
      serviceAccountName: {{ include "notification-service.serviceAccountName" . }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault

      initContainers:
        - name: config-validator
          image: "{{ .Values.initContainer.image }}"
          imagePullPolicy: IfNotPresent
          command:
            - python
            - /scripts/validate_config.py
          volumeMounts:
            - name: config-volume
              mountPath: /config
              readOnly: true
            - name: secrets-volume
              mountPath: /secrets
              readOnly: true

      containers:
        - name: {{ .Chart.Name }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
            capabilities:
              drop:
                - ALL
          
          ports:
            - name: http
              containerPort: 8084
              protocol: TCP
            - name: metrics
              containerPort: 9090
              protocol: TCP

          env:
            - name: SERVICE_NAME
              value: notification-service
            - name: ENVIRONMENT
              value: {{ .Values.env.ENVIRONMENT }}
            - name: LOG_LEVEL
              value: {{ .Values.env.LOG_LEVEL }}
            - name: OTEL_SERVICE_NAME
              value: notification-service
            - name: OTEL_EXPORTER_OTLP_ENDPOINT
              value: {{ .Values.env.OTEL_ENDPOINT }}
            {{- range $key, $value := .Values.env.extraEnvVars }}
            - name: {{ $key }}
              value: {{ $value | quote }}
            {{- end }}

          envFrom:
            - configMapRef:
                name: notification-service-config
            - secretRef:
                name: notification-service-secrets

          volumeMounts:
            - name: config-volume
              mountPath: /app/config
              readOnly: true
            - name: secrets-volume
              mountPath: /app/secrets
              readOnly: true
            - name: tmp-volume
              mountPath: /tmp
            - name: log-volume
              mountPath: /var/log/fpbe

          resources:
            {{- toYaml .Values.resources | nindent 12 }}

          livenessProbe:
            httpGet:
              path: /health/live
              port: http
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
            successThreshold: 1

          readinessProbe:
            httpGet:
              path: /health/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 2
            successThreshold: 1

          startupProbe:
            httpGet:
              path: /health/startup
              port: http
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 12
            successThreshold: 1

      volumes:
        - name: config-volume
          configMap:
            name: notification-service-config
            defaultMode: 0440
        - name: secrets-volume
          secret:
            secretName: notification-service-secrets
            defaultMode: 0440
        - name: tmp-volume
          emptyDir: {}
        - name: log-volume
          emptyDir: {}

      terminationGracePeriodSeconds: 60
      
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}