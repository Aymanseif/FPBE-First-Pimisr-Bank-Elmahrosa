# Default values for FPBE notification service
# Version: 1.0.0

# Number of notification service replicas for high availability
replicaCount: 3

# Container image configuration
image:
  repository: docker.io/fpbe/notification-service
  tag: latest
  pullPolicy: IfNotPresent

# Image pull secrets if required
imagePullSecrets: []

# Service account configuration for AWS IAM roles
serviceAccount:
  create: true
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::123456789:role/notification-service-role
  name: ""

# Pod annotations for monitoring and security
podAnnotations:
  prometheus.io/scrape: "true"
  prometheus.io/port: "8084"
  prometheus.io/path: "/metrics"
  prometheus.io/scheme: "http"
  prometheus.io/scrape-interval: "15s"
  fluentbit.io/parser: "python"
  vault.hashicorp.com/agent-inject: "true"
  vault.hashicorp.com/role: "notification-service"

# Pod security context
podSecurityContext:
  fsGroup: 2000
  seccompProfile:
    type: RuntimeDefault

# Container security context
securityContext:
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true
  runAsNonRoot: true
  runAsUser: 1000
  allowPrivilegeEscalation: false

# Service configuration
service:
  type: ClusterIP
  port: 8084
  targetPort: 8084
  protocol: TCP
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: nlb
    service.beta.kubernetes.io/aws-load-balancer-internal: "true"

# Resource limits and requests
resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    cpu: 500m
    memory: 512Mi

# Horizontal pod autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 2
  maxReplicas: 5
  targetCPUUtilizationPercentage: 70
  targetMemoryUtilizationPercentage: 80
  customMetrics:
    - type: Pods
      pods:
        metric:
          name: notification_queue_length
        target:
          type: AverageValue
          averageValue: "100"

# Node selector for pod scheduling
nodeSelector:
  kubernetes.io/os: linux
  node-type: application

# Pod tolerations
tolerations:
  - key: notification-service
    operator: Equal
    value: "true"
    effect: NoSchedule

# Pod affinity rules for high availability
affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      - labelSelector:
          matchExpressions:
            - key: app
              operator: In
              values:
                - notification-service
        topologyKey: kubernetes.io/hostname

# Environment variables
env:
  ENVIRONMENT: production
  LOG_LEVEL: INFO
  SERVICE_NAME: notification-service
  OTEL_EXPORTER_OTLP_ENDPOINT: http://otel-collector:4317
  OTEL_SERVICE_NAME: notification-service
  PYTHONUNBUFFERED: "1"

# Health check probes
probes:
  liveness:
    httpGet:
      path: /health
      port: 8084
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    successThreshold: 1
    failureThreshold: 3
  readiness:
    httpGet:
      path: /health
      port: 8084
    initialDelaySeconds: 15
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 3
  startup:
    httpGet:
      path: /health
      port: 8084
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 3
    successThreshold: 1
    failureThreshold: 30

# Volume configurations
volumes:
  config:
    name: config-volume
    mountPath: /app/config
    configMap:
      name: notification-service-config
  secrets:
    name: secrets-volume
    mountPath: /app/secrets
    secret:
      secretName: notification-service-secrets
  tmp:
    name: tmp-volume
    mountPath: /tmp
    emptyDir: {}

# Network policies
networkPolicy:
  enabled: true
  ingress:
    - from:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: api-gateway
      ports:
        - port: 8084
          protocol: TCP
  egress:
    - to:
        - namespaceSelector:
            matchLabels:
              name: monitoring
      ports:
        - port: 4317
          protocol: TCP