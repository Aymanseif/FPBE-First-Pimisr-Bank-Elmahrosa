# Helm values configuration for FPBE Mobile Banking System Monitoring Stack
# Version: 1.0.0

global:
  namespace: monitoring
  serviceAccount: monitoring-sa
  storageClass: standard
  labels:
    app: fpbe-monitoring
    environment: production

prometheus:
  enabled: true
  server:
    retention: 15d
    retentionSize: 50GB
    resources:
      requests:
        cpu: 500m
        memory: 2Gi
      limits:
        cpu: 1000m
        memory: 4Gi
    persistentVolume:
      enabled: true
      size: 100Gi
    configMapReload:
      enabled: true
    securityContext:
      runAsNonRoot: true
      runAsUser: 65534
      fsGroup: 65534
    service:
      type: ClusterIP
      port: 9090
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress-class: nginx
        cert-manager.io/cluster-issuer: letsencrypt-prod
      hosts:
        - prometheus.fpbe.com
      tls:
        - secretName: prometheus-tls
          hosts:
            - prometheus.fpbe.com
  alertmanager:
    enabled: true
    config:
      global:
        resolve_timeout: 5m
      route:
        group_by: ['job', 'severity']
        group_wait: 30s
        group_interval: 5m
        repeat_interval: 12h
        receiver: default
      receivers:
        - name: default
          email_configs:
            - to: devops@fpbe.com
              from: alertmanager@fpbe.com
              smarthost: smtp.fpbe.com:587
    resources:
      requests:
        cpu: 100m
        memory: 256Mi
      limits:
        cpu: 200m
        memory: 512Mi
    persistentVolume:
      enabled: true
      size: 5Gi
  nodeExporter:
    enabled: true
    tolerations:
      - effect: NoSchedule
        operator: Exists
  pushgateway:
    enabled: true
    resources:
      requests:
        cpu: 100m
        memory: 128Mi
      limits:
        cpu: 200m
        memory: 256Mi

grafana:
  enabled: true
  replicas: 2
  adminPassword: ${GRAFANA_ADMIN_PASSWORD}
  persistence:
    enabled: true
    size: 10Gi
  resources:
    requests:
      cpu: 200m
      memory: 512Mi
    limits:
      cpu: 500m
      memory: 1Gi
  securityContext:
    runAsUser: 472
    runAsGroup: 472
    fsGroup: 472
  service:
    type: ClusterIP
    port: 80
  ingress:
    enabled: true
    annotations:
      kubernetes.io/ingress-class: nginx
      cert-manager.io/cluster-issuer: letsencrypt-prod
    hosts:
      - grafana.fpbe.com
    tls:
      - secretName: grafana-tls
        hosts:
          - grafana.fpbe.com
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Prometheus
          type: prometheus
          url: http://prometheus-server:9090
          access: proxy
          isDefault: true
          version: 1
          editable: false
          jsonData:
            timeInterval: 30s
            queryTimeout: 30s
  dashboardProviders:
    dashboardproviders.yaml:
      apiVersion: 1
      providers:
        - name: default
          orgId: 1
          folder: ''
          type: file
          disableDeletion: false
          editable: true
          options:
            path: /var/lib/grafana/dashboards
  dashboards:
    default:
      services:
        file: dashboards/services.json
        datasource: Prometheus
      pi-mining:
        file: dashboards/pi-mining.json
        datasource: Prometheus
  plugins:
    - grafana-piechart-panel
    - grafana-worldmap-panel
    - grafana-clock-panel

alertmanager:
  enabled: true
  config:
    global:
      resolve_timeout: 5m
      smtp_smarthost: smtp.fpbe.com:587
      smtp_from: alertmanager@fpbe.com
      smtp_auth_username: alertmanager
      smtp_auth_password: ${SMTP_PASSWORD}
    route:
      group_by: ['job', 'severity']
      group_wait: 30s
      group_interval: 5m
      repeat_interval: 12h
      receiver: default
      routes:
        - match:
            severity: critical
          receiver: pagerduty
        - match:
            severity: warning
          receiver: slack
    receivers:
      - name: default
        email_configs:
          - to: devops@fpbe.com
      - name: pagerduty
        pagerduty_configs:
          - service_key: ${PAGERDUTY_KEY}
      - name: slack
        slack_configs:
          - api_url: ${SLACK_WEBHOOK_URL}
            channel: '#alerts'
  resources:
    requests:
      cpu: 100m
      memory: 256Mi
    limits:
      cpu: 200m
      memory: 512Mi
  persistence:
    enabled: true
    size: 5Gi
  service:
    type: ClusterIP
    port: 9093