# Authentication Service Helm Values Configuration
# Version: 1.0.0
# Last Updated: 2023-09-21

# Default values for auth-service
replicaCount: 3
nameOverride: "auth-service"
fullnameOverride: "fpbe-auth-service"

image:
  repository: fpbe/auth-service
  tag: latest
  pullPolicy: IfNotPresent

imagePullSecrets: []

deployment:
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "3000"
    prometheus.io/path: "/metrics"
    security.fpbe.com/compliance: "PCI-DSS,GDPR"
  
  labels:
    app: auth-service
    component: backend
    part-of: fpbe
  
  replicaCount: 3
  
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  
  podAnnotations: {}
  
  podSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000
    runAsNonRoot: true
    seccompProfile:
      type: RuntimeDefault
  
  containerSecurityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - ALL
    readOnlyRootFilesystem: true
  
  resources:
    requests:
      cpu: "200m"
      memory: "256Mi"
    limits:
      cpu: "500m"
      memory: "512Mi"
  
  livenessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 30
    periodSeconds: 15
    timeoutSeconds: 5
    failureThreshold: 3
  
  readinessProbe:
    httpGet:
      path: /health
      port: 3000
    initialDelaySeconds: 15
    periodSeconds: 10
    timeoutSeconds: 3
    failureThreshold: 3

service:
  type: ClusterIP
  port: 3000
  targetPort: 3000

ingress:
  enabled: false

serviceAccount:
  create: true
  name: "auth-service-sa"
  annotations: {}

podDisruptionBudget:
  enabled: true
  minAvailable: 2

autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                  - auth-service
          topologyKey: kubernetes.io/hostname

env:
  NODE_ENV: production
  PORT: 3000
  LOG_LEVEL: info

configMap:
  enabled: true
  data:
    AUTH_SERVICE_CONFIG: auth-service-config

secrets:
  enabled: true
  data:
    JWT_SECRETS: jwt-secrets

monitoring:
  serviceMonitor:
    enabled: true
    path: /metrics
    port: http
    interval: "15s"

istio:
  enabled: true
  mtls:
    mode: STRICT