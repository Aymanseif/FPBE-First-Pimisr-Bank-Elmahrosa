# Helm chart values for FPBE Transaction Service
# Version: v1.0.0

# Default number of replicas if autoscaling is disabled
replicaCount: 3

# Image configuration
image:
  repository: fpbe/transaction-service
  tag: latest
  pullPolicy: Always

# Image pull secrets for private registry
imagePullSecrets: []

# Service name override options
nameOverride: "transaction-service"
fullnameOverride: "fpbe-transaction-service"

# Service account configuration
serviceAccount:
  create: true
  name: "transaction-service-sa"
  annotations:
    eks.amazonaws.com/role-arn: "arn:aws:iam::123456789:role/transaction-service-role"

# Pod security context
podSecurityContext:
  fsGroup: 2000
  runAsNonRoot: true
  runAsUser: 1000

# Container security context
containerSecurityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
      - ALL
  readOnlyRootFilesystem: true

# Service configuration
service:
  type: ClusterIP
  port: 8083
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "8083"

# Resource limits and requests
resources:
  limits:
    cpu: 1000m
    memory: 1Gi
  requests:
    cpu: 500m
    memory: 512Mi

# Horizontal Pod Autoscaling configuration
autoscaling:
  enabled: true
  minReplicas: 3
  maxReplicas: 10
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 60
      policies:
        - type: Pods
          value: 2
          periodSeconds: 60
    scaleDown:
      stabilizationWindowSeconds: 300
      policies:
        - type: Pods
          value: 1
          periodSeconds: 120

# Pod affinity rules for high availability
affinity:
  podAntiAffinity:
    preferredDuringSchedulingIgnoredDuringExecution:
      - weight: 100
        podAffinityTerm:
          labelSelector:
            matchExpressions:
              - key: app.kubernetes.io/name
                operator: In
                values:
                  - transaction-service
          topologyKey: kubernetes.io/hostname

# Health check probe configurations
probes:
  liveness:
    httpGet:
      path: /actuator/health/liveness
      port: 8083
    initialDelaySeconds: 60
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  readiness:
    httpGet:
      path: /actuator/health/readiness
      port: 8083
    initialDelaySeconds: 30
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 3
    successThreshold: 1
  startup:
    httpGet:
      path: /actuator/health
      port: 8083
    initialDelaySeconds: 45
    periodSeconds: 10
    timeoutSeconds: 5
    failureThreshold: 30
    successThreshold: 1

# Monitoring configuration
monitoring:
  serviceMonitor:
    enabled: true
    interval: "15s"
    scrapeTimeout: "10s"
    labels:
      release: prometheus
  prometheus:
    scrape: true
    path: /actuator/prometheus
    port: "8083"
  grafana:
    dashboards:
      enabled: true
      label: grafana_dashboard